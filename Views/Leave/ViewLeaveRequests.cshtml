@model IEnumerable<LeaveRequest>

@{
    ViewData["Title"] = "View Leave Requests";
}

<head>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css">
</head>

<div class="d-md-flex d-block align-items-center justify-content-between page-breadcrumb mb-3">
    <div class="my-auto mb-2">
        <h2 class="mb-1">Leave Requests</h2>
        <nav>
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item">
                    <a href="index.html"><i class="ti ti-smart-home"></i></a>
                </li>
                <li class="breadcrumb-item">Manager</li>
                <li class="breadcrumb-item active" aria-current="page">View Leave Requests</li>
            </ol>
        </nav>
    </div>
    <div class="d-flex my-xl-auto right-content align-items-center flex-wrap">
        <div class="me-2 mb-2">
            <div class="dropdown">
                <a href="javascript:void(0);" class="dropdown-toggle btn btn-white d-inline-flex align-items-center" data-bs-toggle="dropdown">
                    <i class="ti ti-file-export me-1"></i>Export
                </a>
                <ul class="dropdown-menu dropdown-menu-end p-3">
                    <li>
                        <a href="javascript:void(0);" class="dropdown-item rounded-1" id="exportPdf"><i class="ti ti-file-type-pdf me-1"></i>Export as PDF</a>
                    </li>
                    <li>
                        <a href="javascript:void(0);" class="dropdown-item rounded-1" id="exportExcel"><i class="ti ti-file-type-xls me-1"></i>Export as Excel</a>
                    </li>
                </ul>
            </div>
        </div>
        <div class="head-icons ms-2">
            <a href="javascript:void(0);" class="" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="Collapse" id="collapse-header">
                <i class="ti ti-chevrons-up"></i>
            </a>
        </div>
    </div>
</div>

@if (TempData["Message"] != null)
{
    <div class="alert alert-warning">@TempData["Message"]</div>
}
@if (TempData["success"] != null)
{
    <div class="alert alert-success">@TempData["success"]</div>
}
@if (TempData["error"] != null)
{
    <div class="alert alert-danger">@TempData["error"]</div>
}

<div class="card">
    <div class="card-header d-flex align-items-center justify-content-between flex-wrap row-gap-1">
        <div class="d-flex">
            <h5 class="me-2">Leave List</h5>
        </div>
        <div class="dropdown me-3">
            <select id="leaveTypeSortBy" class="form-select" asp-items="@ViewBag.Lea">
                
            </select>
        </div>
        <div class="dropdown">
            <select id="startDateSortBy" class="form-select">
                <option value="">Filters</option>
                
                <option value="last7days">Last 7 Days</option>
                <option value="lastMonth">Last Month</option>
                <option value="today">Today</option>
                <option value="thisYear">This Year</option>
                <option value="yesterday">Yesterday</option>
            </select>
        </div>

        <div class="dropdown">
            <select id="startDate" class="form-select">
                <option value="ascending">Ascending</option>
                <option value="descending">Descending</option>
                <option value="today">Recently Added</option>
            </select>
        </div>

    </div>
    <div class="card-body">
        <table class="table table-bordered mt-4" id="leaveRequestsTable">
            <thead>
                <tr>
                    <th>Leave ID</th>
                    <th>Leave Type</th>
                    <th>Employees</th>
                    <th>Approved By</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Reason</th>
                    <th>No of Days</th>
                    <th>Status</th>
                  @*   <th>Status History</th> *@
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.LeaveRequestId</td>
                        <td>@item.MasterLeaveType.LeaveType</td>
                        <td>@item.User.FirstName @item.User.LastName</td>
                        <td>@item.ApprovedBy</td>
                        <td>@item.StartDate.ToShortDateString()</td>
                        <td>@item.EndDate.ToShortDateString()</td>
                        <td>@item.Reason</td>
                        <td>@item.NumberOfDays</td>
                        <td>
                            @if(item.Status=="Approved")
                            {
                                <span class="badge bg-success"><i class="ti ti-point-filled me-1"></i>@item.Status</span>
                            }
                            else
                            {
                                <span class="badge bg-danger"><i class="ti ti-point-filled me-1"></i>@item.Status</span>
                            }
                            </td>
                       @*  <td><pre>@item.StatusHistory</pre></td> *@
                        <td>
                            @if (item.Status == "Pending" || item.Status == "Approved" || item.Status == "Rejected")
                            {
                                <form method="post" action="@Url.Action("UpdateLeaveRequest", "Leave")">
                                    <input type="hidden" name="LeaveRequestId" value="@item.LeaveRequestId" />
                                    @if (item.Status != "Processed")
                                    {
                                        <button type="submit" style="border:none" class="btn btn-sm btn-success" name="action" value="Approve">Approve</button>
                                        <button type="submit" style="border:none" class="btn btn-sm btn-danger" name="action" value="Reject">Reject</button>
                                    }
                                    else
                                    {
                                        <span class="badge badge-secondary">Processed</span>
                                    }
                                </form>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.html5.min.js"></script>

    <script>
                $(document).ready(function () {
            var table = $('#leaveRequestsTable').DataTable({
                pageLength: 10,
                lengthMenu: [[5, 10, 25, -1], [5, 10, 25, "All"]],
                dom: 'lBfrtip',
                buttons: [
                    {
                        extend: 'pdfHtml5',
                        text: 'Export as PDF',
                        className: 'd-none',
                        title: 'Leave Request Details'
                    },
                    {
                        extend: 'excelHtml5',
                        text: 'Export as Excel',
                        className: 'd-none',
                        title: 'Leave Request Details'
                    }
                ]
            });

            $('#exportPdf').click(function () {
                table.button('.buttons-pdf').trigger();
            });

            $('#exportExcel').click(function () {
                table.button('.buttons-excel').trigger();
            });

            $('#leaveTypeSortBy').on('change', function () {
                var filterValue = $(this).val();
                table.column(1).search(filterValue).draw(); // Leave Type is in column index 1
            });

                    $('#startDateSortBy').on('change', function () {
            var filterValue = $(this).val();
            var today = new Date();
            today.setHours(0, 0, 0, 0); // Normalize to midnight for accurate comparison

            table.rows().every(function () {
                var row = this.node();
                var startDate = new Date($(row).find('td').eq(4).text()); // Start Date column (index 4)
                startDate.setHours(0, 0, 0, 0); // Normalize time

                var showRow = false;

                switch (filterValue) {
                    case "last7days":
                        var sevenDaysAgo = new Date();
                        sevenDaysAgo.setDate(today.getDate() - 7);
                        showRow = startDate >= sevenDaysAgo && startDate <= today;
                        break;
                    case "lastMonth":
                        var firstDayLastMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);
                        var lastDayLastMonth = new Date(today.getFullYear(), today.getMonth(), 0);
                        showRow = startDate >= firstDayLastMonth && startDate <= lastDayLastMonth;
                        break;
                    case "today":
                        showRow = startDate.getTime() === today.getTime();
                        break;
                    case "thisYear":
                        showRow = startDate.getFullYear() === today.getFullYear();
                        break;
                    case "yesterday":
                        var yesterday = new Date();
                        yesterday.setDate(today.getDate() - 1);
                        showRow = startDate.getTime() === yesterday.getTime();
                        break;
                    default:
                        showRow = true;
                }

                $(row).toggle(showRow);
            });
        });

            $('#startDate').on('change', function () {
                var sortBy = $(this).val();
                var columnIndex = 4; // Start Date column (index 4)

                if (sortBy === "ascending") {
                    table.order([columnIndex, 'asc']).draw();
                } else if (sortBy === "descending") {
                    table.order([columnIndex, 'desc']).draw();
                } else if (sortBy === "today") {
                    var today = new Date().toDateString();
                    table.rows().every(function () {
                        var row = this.node();
                        var startDate = new Date($(row).find('td').eq(4).text()).toDateString();
                        $(row).toggle(startDate === today);
                    });
                }
            });
        });

    </script>
}