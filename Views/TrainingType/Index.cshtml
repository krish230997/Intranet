@model IEnumerable<TrainingType>

@if (TempData["msg"] != null)
{
    <div class="alert alert-success text-left w-40" role="alert">
        @TempData["msg"]
    </div>
}
<hr />

<div class="d-md-flex d-block align-items-center justify-content-between page-breadcrumb mb-3">
    <div class="my-auto mb-2">
        <h2 class="mb-1">Training Type</h2>
        <nav>
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item">
                    <a href="index.html"><i class="ti ti-smart-home"></i></a>
                </li>
                <li class="breadcrumb-item">Performance</li>
                <li class="breadcrumb-item active" aria-current="page">Training Type</li>
            </ol>
        </nav>
    </div>
    <div class="d-flex my-xl-auto right-content align-items-center">

        <div class="mb-2">
            <a asp-action="AddTrainingType" class="btn btn-primary d-flex align-items-center">
            <i class="ti ti-circle-plus me-2"></i>Add Training Type
            </a>
        </div>
        <div class="head-icons ms-2">
            <a href="javascript:void(0);" class="" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="Collapse" id="collapse-header">
                <i class="ti ti-chevrons-up"></i>
            </a>
        </div>
    </div>
</div>


<div class="card">
    <div class="card-header d-flex align-items-center justify-content-between">
        <h5>Training Type List</h5>
        <div class="dropdown">
            <select id="sortBy" class="form-select">
                <option value="ascending">Ascending</option>
                <option value="descending">Descending</option>
                <option value="recentlyAdded" selected>Sort By: Recently Added</option>
            </select>
        </div>
    </div>

<div class="card-body">
    <!-- Training Types Table -->
    <table class="table" id="trainingTypesTable">
        <thead>
            <tr>
                <th scope="col">ID</th>
                <th scope="col">Type</th>
                <th scope="col">Description</th>
                <th scope="col">Status</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var d in Model)
            {
                <tr class="training-type-row">
                    <th scope="row">@d.TrainingTypeId</th>
                    <td>@d.TrainingTypeName</td>
                    <td>@d.Description</td>
                    <td>
                        @if (d.Status == "Active")
                        {
                            <span class="badge badge-success d-inline-flex align-items-center badge-xs">
                                <i class="ti ti-point-filled me-1"></i>Active
                            </span>
                        }
                        else if (d.Status == "Inactive")
                        {
                            <span class="badge badge-danger d-inline-flex align-items-center badge-xs">
                                <i class="ti ti-point-filled me-1"></i>Inactive
                            </span>
                        }
                        else
                        {
                            <span class="badge badge-secondary d-inline-flex align-items-center badge-xs">
                                <i class="ti ti-point-filled me-1"></i>@d.Status
                            </span>
                        }
                    </td>

                    <td>
                        
                        <a class="me-2" asp-controller="TrainingType" asp-action="Edit" asp-route-id="@d.TrainingTypeId">
                            <i class="ti ti-edit"></i>
                        </a>
                            <a class="me-2" asp-controller="TrainingType" asp-action="DeletetrainingType" asp-route-id="@d.TrainingTypeId" onclick="return confirm('Are you sure to delete this record?')">
                                <i class="bi bi-trash"></i>
                            </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
</div>

@section scripts {
    <link href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css" rel="stylesheet">
    <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>

    <script>
        $(document).ready(function () {
            // Initialize DataTable
            var table = $('#trainingTypesTable').DataTable({
                pageLength: 10,  // Default number of rows per page
                lengthMenu: [[10, 25, 50, -1], ["10", "25", "50", "All"]], // Custom dropdown labels
                dom: 'lfrtip', // Layout (length menu, filter, table, pagination)
                language: {
                    searchPlaceholder: "Search", // Placeholder text for search box
                    search: "", // Hide default "Search:" label
                    lengthMenu: "Row Per Page  _MENU_  Entries", // Custom text for entries per page dropdown
                    paginate: {
                        first: "First",
                        last: "Last",
                        next: "Next",
                        previous: "Previous"
                    }
                }
            });

            // Sorting function based on dropdown selection
            $('#sortBy').change(function () {
                var sortBy = $(this).val();
                var columnIndex = 0; // Assuming ID is in the first column (index 0)

                if (sortBy === "ascending") {
                    table.order([columnIndex, 'asc']).draw(); // Sort by ID in ascending order
                } else if (sortBy === "descending") {
                    table.order([columnIndex, 'desc']).draw(); // Sort by ID in descending order
                } else if (sortBy === "recentlyAdded") {
                    table.order([columnIndex, 'desc']).draw(); // Recently Added (same as descending)
                }
            });
        });
    </script>
}


<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">